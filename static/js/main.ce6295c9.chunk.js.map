{"version":3,"sources":["modules/Header.js","modules/Introduction.js","modules/Container.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","class","href","Introduction","props","nameRef","React","createRef","sloganRef","ref","this","className","data-speed","data-random","data-dltSpeed","data-text","Component","Container","svgFillOpacityConversion","time","steps","start","end","a","timePerStep","gapPerStep","gap","console","log","setState","svgFillOpacity","i","parseFloat","state","Promise","r","setTimeout","handleScroll","Y","window","scrollY","isScrolled","introBgState","svgDirection","svgFill","addEventListener","removeEventListener","style","backgroundColor","xmlns","viewBox","fill","fill-opacity","d","App","src","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce6295c9.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../assets/css/Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header-container\">\r\n            <div class=\"header-item text\" id=\"top\">\r\n                <a href=\"#\">Top</a>\r\n                <div class=\"link-highlight\"></div>\r\n            </div>\r\n            <div class=\"header-item text\" id=\"top\">\r\n                <a href=\"#\">About</a>\r\n                <div class=\"link-highlight\"></div>\r\n            </div>\r\n            <div class=\"header-item text\" id=\"top\">\r\n                <a href=\"#\">Work</a>\r\n                <div class=\"link-highlight\"></div>\r\n            </div>\r\n            <div class=\"header-item text\" id=\"top\">\r\n                <a href=\"#\">Contact</a>\r\n                <div class=\"link-highlight\"></div>\r\n            </div>\r\n            <div class=\"header-item text\" id=\"top\">\r\n                <a href=\"#\">Blog</a>\r\n                <div class=\"link-highlight\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport '../assets/css/Introduction.css'\r\n\r\nclass Introduction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nameRef = React.createRef();\r\n        this.sloganRef = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"intro-container\">\r\n                <div ref={this.nameRef} class=\"text\" id=\"name\">Dylan Bowers</div>\r\n                <div ref={this.sloganRef} class=\"text\" id=\"slogan\">Code&nbsp;\r\n                    <span className=\"typeWriter\" \r\n                        data-speed=\"2.5\"\r\n                        data-random=\"True\"\r\n                        data-dltSpeed=\"False\"\r\n                        data-text='[\"aesthetically.\", \"cleanly.\", \"with the future in mind.\"]'>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Introduction;\r\n","import React from 'react'\r\nimport '../assets/css/Container.css'\r\nimport Header from './Header';\r\nimport Introduction from './Introduction';\r\n\r\nclass Container extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            svgFill: '#222222',\r\n            introBgState: '#222222',\r\n            isScrolled: false,\r\n            svgDirection: '0',\r\n            svgFillOpacity: '1'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll, true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    /* why must they make svg opacity animations so difficult */\r\n    svgFillOpacityConversion = async (time, steps, start, end) => {\r\n        const gap = end - start;\r\n        const timePerStep = time / steps;\r\n        const gapPerStep = gap / steps;\r\n\r\n        console.log('DEBUG DATA', gap, steps,  timePerStep, gapPerStep);\r\n\r\n        this.setState({\r\n            svgFillOpacity: start\r\n        })\r\n        for ( let i = 0; i < steps; i++ ) {\r\n            // console.log(this.state.svgFillOpacity);\r\n            await this.setState({\r\n                svgFillOpacity: parseFloat(this.state.svgFillOpacity) + gapPerStep\r\n            })\r\n            await new Promise(r => setTimeout(r, timePerStep));\r\n        }\r\n        this.setState({\r\n            svgFillOpacity: end\r\n        })\r\n    }\r\n\r\n    handleScroll = async () => {\r\n        const Y = window.scrollY;\r\n        if ( Y > 0 && !this.state.isScrolled ) {\r\n            this.setState({\r\n                isScrolled: true,\r\n                introBgState: '#22222200'\r\n            });\r\n            await this.svgFillOpacityConversion(250, 10, 1, 0);\r\n            this.setState({\r\n                svgDirection: '320',\r\n                \r\n            });\r\n            this.svgFillOpacityConversion(250, 10, 0, 1);\r\n        }\r\n        else if ( Y === 0 && this.state.isScrolled ) {\r\n            this.setState({\r\n                isScrolled: false,\r\n                \r\n            });\r\n            await this.svgFillOpacityConversion(250, 10, 1, 0);\r\n            this.setState({\r\n                svgDirection: '0',\r\n                introBgState: '#222222'\r\n            });\r\n            this.svgFillOpacityConversion(250, 10, 0, 1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"body\">\r\n                <Header/>\r\n                <div id=\"top-container\" style={{backgroundColor: this.state.introBgState}}>\r\n                    <Introduction/>\r\n                </div>\r\n                <div id=\"wave-hr\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path fill={this.state.svgFill} fill-opacity={this.state.svgFillOpacity} \r\n                        d={`M0,160L26.7,176C53.3,192,107,224,160,213.3C213.3,203,267,149,320,112C373.3,75,427,53,480,58.7C533.3,64,587,96,640,122.7C693.3,149,747,171,800,170.7C853.3,171,907,149,960,165.3C1013.3,181,1067,235,1120,234.7C1173.3,235,1227,181,1280,160C1333.3,139,1387,149,1413,154.7L1440,160L1440,${this.state.svgDirection}L1413.3,${this.state.svgDirection}C1386.7,${this.state.svgDirection},1333,${this.state.svgDirection},1280,${this.state.svgDirection}C1226.7,${this.state.svgDirection},1173,${this.state.svgDirection},1120,${this.state.svgDirection}C1066.7,${this.state.svgDirection},1013,${this.state.svgDirection},960,${this.state.svgDirection}C906.7,${this.state.svgDirection},853,${this.state.svgDirection},800,${this.state.svgDirection}C746.7,${this.state.svgDirection},693,${this.state.svgDirection},640,${this.state.svgDirection}C586.7,${this.state.svgDirection},533,${this.state.svgDirection},480,${this.state.svgDirection}C426.7,${this.state.svgDirection},373,${this.state.svgDirection},320,${this.state.svgDirection}C266.7,${this.state.svgDirection},213,${this.state.svgDirection},160,${this.state.svgDirection}C106.7,${this.state.svgDirection},53,${this.state.svgDirection},27,${this.state.svgDirection}L0,${this.state.svgDirection}Z`}></path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","// import React from 'react';\r\nimport React from 'react'\r\n\r\nimport './assets/css/App.css';\r\nimport Container from './modules/Container';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <script src=\"./assets/js/vendor/typelighter.js\"></script>\r\n        <Container/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}